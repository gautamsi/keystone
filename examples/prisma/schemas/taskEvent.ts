
import { list } from '@keystone-6/core';
import { text,checkbox,select,json,bigInt,integer,timestamp,UNDEFINED__Float } from '@keystone-6/core/fields';
import { allowAll } from '@keystone-6/core/access';
import { Lists } from '.keystone/types';

export const TaskEvent: Lists.TaskEvent = list({
  access: allowAll,
  
  fields: {
    message: text({  }),
    traceId: text({  }),
    spanId: text({  }),
    parentId: text({  }),
    tracestate: text({  }),
    isError: checkbox({ defaultValue: false }),
    isPartial: checkbox({ defaultValue: false }),
    isCancelled: checkbox({ defaultValue: false }),
    serviceName: text({  }),
    serviceNamespace: text({  }),
    level: select({ options: [{ label: 'Trace', value: 'trace' },
      { label: 'Debug', value: 'debug' },
      { label: 'Log', value: 'log' },
      { label: 'Info', value: 'info' },
      { label: 'Warn', value: 'warn' },
      { label: 'Error', value: 'error' }],
      defaultValue: 'TRACE' }),
    kind: select({ options: [{ label: 'Unspecified', value: 'unspecified' },
{ label: 'Internal', value: 'internal' },
{ label: 'Server', value: 'server' },
{ label: 'Client', value: 'client' },
{ label: 'Producer', value: 'producer' },
{ label: 'Consumer', value: 'consumer' },
{ label: 'Unrecognized', value: 'unrecognized' },
{ label: 'Log', value: 'log' }], defaultValue: 'INTERNAL' }),
    status: select({ options: [{ label: 'Unset', value: 'unset' },
{ label: 'Ok', value: 'ok' },
{ label: 'Error', value: 'error' },
{ label: 'Unrecognized', value: 'unrecognized' }], defaultValue: 'UNSET' }),
    links: json({  }),
    events: json({  }),
    startTime: bigInt({  }),
    duration: bigInt({  }),
    attemptId: text({  }),
    attemptNumber: integer({  }),
    environmentId: text({  }),
    environmentType: select({ options: [{ label: 'Production', value: 'production' },
{ label: 'Staging', value: 'staging' },
{ label: 'Development', value: 'development' },
{ label: 'Preview', value: 'preview' }],  }),
    organizationId: text({  }),
    projectId: text({  }),
    projectRef: text({  }),
    runId: text({  }),
    runIsTest: checkbox({ defaultValue: false }),
    idempotencyKey: text({  }),
    taskSlug: text({  }),
    taskPath: text({  }),
    taskExportName: text({  }),
    workerId: text({  }),
    workerVersion: text({  }),
    queueId: text({  }),
    queueName: text({  }),
    batchId: text({  }),
    properties: json({  }),
    metadata: json({  }),
    style: json({  }),
    output: json({  }),
    outputType: text({  }),
    payload: json({  }),
    payloadType: text({  }),
    createdAt: timestamp({ defaultValue: { kind: 'now' } }),
    usageDurationMs: integer({ defaultValue: 0 }),
    usageCostInCents: UNDEFINED__Float({  }),
    machinePreset: text({  }),
    machinePresetCpu: UNDEFINED__Float({  }),
    machinePresetMemory: UNDEFINED__Float({  }),
    machinePresetCentsPerMs: UNDEFINED__Float({  })
  }
});
