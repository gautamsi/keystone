# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type User {
  id: ID!
  name: String
  email: String
  avatar: ImageFieldOutput
  attachment: FileFieldOutput
  password: PasswordState
  isAdmin: Boolean
  roles: String
  phoneNumbers(where: PhoneNumberWhereInput! = {}, orderBy: [PhoneNumberOrderByInput!]! = [], take: Int, skip: Int! = 0): [PhoneNumber!]
  phoneNumbersCount(where: PhoneNumberWhereInput! = {}): Int
  posts(where: PostWhereInput! = {}, orderBy: [PostOrderByInput!]! = [], take: Int, skip: Int! = 0): [Post!]
  postsCount(where: PostWhereInput! = {}): Int
  randomNumber: Float
  list1: List1
  list2s(where: List2WhereInput! = {}, orderBy: [List2OrderByInput!]! = [], take: Int, skip: Int! = 0): [List2!]
  list2sCount(where: List2WhereInput! = {}): Int
  list3: List3
  list4s(where: List4WhereInput! = {}, orderBy: [List4OrderByInput!]! = [], take: Int, skip: Int! = 0): [List4!]
  list4sCount(where: List4WhereInput! = {}): Int
  list5s(where: List5WhereInput! = {}, orderBy: [List5OrderByInput!]! = [], take: Int, skip: Int! = 0): [List5!]
  list5sCount(where: List5WhereInput! = {}): Int
  list6s(where: List6WhereInput! = {}, orderBy: [List6OrderByInput!]! = [], take: Int, skip: Int! = 0): [List6!]
  list6sCount(where: List6WhereInput! = {}): Int
  list7: List7
  list8(where: List8WhereInput! = {}, orderBy: [List8OrderByInput!]! = [], take: Int, skip: Int! = 0): [List8!]
  list8Count(where: List8WhereInput! = {}): Int
}

type ImageFieldOutput {
  id: ID!
  filesize: Int!
  width: Int!
  height: Int!
  extension: ImageExtension!
  url: String!
}

enum ImageExtension {
  jpg
  png
  webp
  gif
}

type FileFieldOutput {
  filename: String!
  filesize: Int!
  url: String!
}

type PasswordState {
  isSet: Boolean!
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  name: StringFilter
  email: StringFilter
  password: PasswordFilter
  isAdmin: BooleanFilter
  roles: StringFilter
  phoneNumbers: PhoneNumberManyRelationFilter
  posts: PostManyRelationFilter
  list1: List1WhereInput
  list2s: List2ManyRelationFilter
  list3: List3WhereInput
  list4s: List4ManyRelationFilter
  list5s: List5ManyRelationFilter
  list6s: List6ManyRelationFilter
  list7: List7WhereInput
  list8: List8ManyRelationFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input PasswordFilter {
  isSet: Boolean!
}

input BooleanFilter {
  equals: Boolean
  not: BooleanFilter
}

input PhoneNumberManyRelationFilter {
  every: PhoneNumberWhereInput
  some: PhoneNumberWhereInput
  none: PhoneNumberWhereInput
}

input PostManyRelationFilter {
  every: PostWhereInput
  some: PostWhereInput
  none: PostWhereInput
}

input List2ManyRelationFilter {
  every: List2WhereInput
  some: List2WhereInput
  none: List2WhereInput
}

input List4ManyRelationFilter {
  every: List4WhereInput
  some: List4WhereInput
  none: List4WhereInput
}

input List5ManyRelationFilter {
  every: List5WhereInput
  some: List5WhereInput
  none: List5WhereInput
}

input List6ManyRelationFilter {
  every: List6WhereInput
  some: List6WhereInput
  none: List6WhereInput
}

input List8ManyRelationFilter {
  every: List8WhereInput
  some: List8WhereInput
  none: List8WhereInput
}

input UserOrderByInput {
  id: OrderDirection
  name: OrderDirection
  email: OrderDirection
  isAdmin: OrderDirection
  roles: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input UserUpdateInput {
  name: String
  email: String
  avatar: ImageFieldInput
  attachment: FileFieldInput
  password: String
  isAdmin: Boolean
  roles: String
  phoneNumbers: PhoneNumberRelateToManyForUpdateInput
  posts: PostRelateToManyForUpdateInput
  list1: List1RelateToOneForUpdateInput
  list2s: List2RelateToManyForUpdateInput
  list3: List3RelateToOneForUpdateInput
  list4s: List4RelateToManyForUpdateInput
  list5s: List5RelateToManyForUpdateInput
  list6s: List6RelateToManyForUpdateInput
  list7: List7RelateToOneForUpdateInput
  list8: List8RelateToManyForUpdateInput
}

input ImageFieldInput {
  upload: Upload!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input FileFieldInput {
  upload: Upload!
}

input PhoneNumberRelateToManyForUpdateInput {
  disconnect: [PhoneNumberWhereUniqueInput!]
  set: [PhoneNumberWhereUniqueInput!]
  create: [PhoneNumberCreateInput!]
  connect: [PhoneNumberWhereUniqueInput!]
}

input PostRelateToManyForUpdateInput {
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  create: [PostCreateInput!]
  connect: [PostWhereUniqueInput!]
}

input List1RelateToOneForUpdateInput {
  create: List1CreateInput
  connect: List1WhereUniqueInput
  disconnect: Boolean
}

input List2RelateToManyForUpdateInput {
  disconnect: [List2WhereUniqueInput!]
  set: [List2WhereUniqueInput!]
  create: [List2CreateInput!]
  connect: [List2WhereUniqueInput!]
}

input List3RelateToOneForUpdateInput {
  create: List3CreateInput
  connect: List3WhereUniqueInput
  disconnect: Boolean
}

input List4RelateToManyForUpdateInput {
  disconnect: [List4WhereUniqueInput!]
  set: [List4WhereUniqueInput!]
  create: [List4CreateInput!]
  connect: [List4WhereUniqueInput!]
}

input List5RelateToManyForUpdateInput {
  disconnect: [List5WhereUniqueInput!]
  set: [List5WhereUniqueInput!]
  create: [List5CreateInput!]
  connect: [List5WhereUniqueInput!]
}

input List6RelateToManyForUpdateInput {
  disconnect: [List6WhereUniqueInput!]
  set: [List6WhereUniqueInput!]
  create: [List6CreateInput!]
  connect: [List6WhereUniqueInput!]
}

input List7RelateToOneForUpdateInput {
  create: List7CreateInput
  connect: List7WhereUniqueInput
  disconnect: Boolean
}

input List8RelateToManyForUpdateInput {
  disconnect: [List8WhereUniqueInput!]
  set: [List8WhereUniqueInput!]
  create: [List8CreateInput!]
  connect: [List8WhereUniqueInput!]
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  name: String
  email: String
  avatar: ImageFieldInput
  attachment: FileFieldInput
  password: String
  isAdmin: Boolean
  roles: String
  phoneNumbers: PhoneNumberRelateToManyForCreateInput
  posts: PostRelateToManyForCreateInput
  list1: List1RelateToOneForCreateInput
  list2s: List2RelateToManyForCreateInput
  list3: List3RelateToOneForCreateInput
  list4s: List4RelateToManyForCreateInput
  list5s: List5RelateToManyForCreateInput
  list6s: List6RelateToManyForCreateInput
  list7: List7RelateToOneForCreateInput
  list8: List8RelateToManyForCreateInput
}

input PhoneNumberRelateToManyForCreateInput {
  create: [PhoneNumberCreateInput!]
  connect: [PhoneNumberWhereUniqueInput!]
}

input PostRelateToManyForCreateInput {
  create: [PostCreateInput!]
  connect: [PostWhereUniqueInput!]
}

input List1RelateToOneForCreateInput {
  create: List1CreateInput
  connect: List1WhereUniqueInput
}

input List2RelateToManyForCreateInput {
  create: [List2CreateInput!]
  connect: [List2WhereUniqueInput!]
}

input List3RelateToOneForCreateInput {
  create: List3CreateInput
  connect: List3WhereUniqueInput
}

input List4RelateToManyForCreateInput {
  create: [List4CreateInput!]
  connect: [List4WhereUniqueInput!]
}

input List5RelateToManyForCreateInput {
  create: [List5CreateInput!]
  connect: [List5WhereUniqueInput!]
}

input List6RelateToManyForCreateInput {
  create: [List6CreateInput!]
  connect: [List6WhereUniqueInput!]
}

input List7RelateToOneForCreateInput {
  create: List7CreateInput
  connect: List7WhereUniqueInput
}

input List8RelateToManyForCreateInput {
  create: [List8CreateInput!]
  connect: [List8WhereUniqueInput!]
}

type List1 {
  id: ID!
  name: String
}

input List1WhereUniqueInput {
  id: ID
}

input List1WhereInput {
  AND: [List1WhereInput!]
  OR: [List1WhereInput!]
  NOT: [List1WhereInput!]
  id: IDFilter
  name: StringFilter
}

input List1OrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input List1UpdateInput {
  name: String
}

input List1UpdateArgs {
  where: List1WhereUniqueInput!
  data: List1UpdateInput!
}

input List1CreateInput {
  name: String
}

type List2 {
  id: ID!
  name: String
}

input List2WhereUniqueInput {
  id: ID
}

input List2WhereInput {
  AND: [List2WhereInput!]
  OR: [List2WhereInput!]
  NOT: [List2WhereInput!]
  id: IDFilter
  name: StringFilter
}

input List2OrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input List2UpdateInput {
  name: String
}

input List2UpdateArgs {
  where: List2WhereUniqueInput!
  data: List2UpdateInput!
}

input List2CreateInput {
  name: String
}

type List3 {
  id: ID!
  name: String
  user: User
}

input List3WhereUniqueInput {
  id: ID
}

input List3WhereInput {
  AND: [List3WhereInput!]
  OR: [List3WhereInput!]
  NOT: [List3WhereInput!]
  id: IDFilter
  name: StringFilter
  user: UserWhereInput
}

input List3OrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input List3UpdateInput {
  name: String
  user: UserRelateToOneForUpdateInput
}

input UserRelateToOneForUpdateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
}

input List3UpdateArgs {
  where: List3WhereUniqueInput!
  data: List3UpdateInput!
}

input List3CreateInput {
  name: String
  user: UserRelateToOneForCreateInput
}

input UserRelateToOneForCreateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

type List4 {
  id: ID!
  name: String
  user: User
}

input List4WhereUniqueInput {
  id: ID
}

input List4WhereInput {
  AND: [List4WhereInput!]
  OR: [List4WhereInput!]
  NOT: [List4WhereInput!]
  id: IDFilter
  name: StringFilter
  user: UserWhereInput
}

input List4OrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input List4UpdateInput {
  name: String
  user: UserRelateToOneForUpdateInput
}

input List4UpdateArgs {
  where: List4WhereUniqueInput!
  data: List4UpdateInput!
}

input List4CreateInput {
  name: String
  user: UserRelateToOneForCreateInput
}

type List5 {
  id: ID!
  name: String
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0): [User!]
  usersCount(where: UserWhereInput! = {}): Int
}

input List5WhereUniqueInput {
  id: ID
}

input List5WhereInput {
  AND: [List5WhereInput!]
  OR: [List5WhereInput!]
  NOT: [List5WhereInput!]
  id: IDFilter
  name: StringFilter
  users: UserManyRelationFilter
}

input UserManyRelationFilter {
  every: UserWhereInput
  some: UserWhereInput
  none: UserWhereInput
}

input List5OrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input List5UpdateInput {
  name: String
  users: UserRelateToManyForUpdateInput
}

input UserRelateToManyForUpdateInput {
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input List5UpdateArgs {
  where: List5WhereUniqueInput!
  data: List5UpdateInput!
}

input List5CreateInput {
  name: String
  users: UserRelateToManyForCreateInput
}

input UserRelateToManyForCreateInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

type List6 {
  id: ID!
  name: String
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0): [User!]
  usersCount(where: UserWhereInput! = {}): Int
}

input List6WhereUniqueInput {
  id: ID
}

input List6WhereInput {
  AND: [List6WhereInput!]
  OR: [List6WhereInput!]
  NOT: [List6WhereInput!]
  id: IDFilter
  name: StringFilter
  users: UserManyRelationFilter
}

input List6OrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input List6UpdateInput {
  name: String
  users: UserRelateToManyForUpdateInput
}

input List6UpdateArgs {
  where: List6WhereUniqueInput!
  data: List6UpdateInput!
}

input List6CreateInput {
  name: String
  users: UserRelateToManyForCreateInput
}

type List7 {
  id: ID!
  name: String
  user: User
}

input List7WhereUniqueInput {
  id: ID
}

input List7WhereInput {
  AND: [List7WhereInput!]
  OR: [List7WhereInput!]
  NOT: [List7WhereInput!]
  id: IDFilter
  name: StringFilter
  user: UserWhereInput
}

input List7OrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input List7UpdateInput {
  name: String
  user: UserRelateToOneForUpdateInput
}

input List7UpdateArgs {
  where: List7WhereUniqueInput!
  data: List7UpdateInput!
}

input List7CreateInput {
  name: String
  user: UserRelateToOneForCreateInput
}

type List8 {
  id: ID!
  name: String
  user: User
}

input List8WhereUniqueInput {
  id: ID
}

input List8WhereInput {
  AND: [List8WhereInput!]
  OR: [List8WhereInput!]
  NOT: [List8WhereInput!]
  id: IDFilter
  name: StringFilter
  user: UserWhereInput
}

input List8OrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input List8UpdateInput {
  name: String
  user: UserRelateToOneForUpdateInput
}

input List8UpdateArgs {
  where: List8WhereUniqueInput!
  data: List8UpdateInput!
}

input List8CreateInput {
  name: String
  user: UserRelateToOneForCreateInput
}

type PhoneNumber {
  id: ID!
  label: String
  user: User
  type: String
  value: String
}

input PhoneNumberWhereUniqueInput {
  id: ID
}

input PhoneNumberWhereInput {
  AND: [PhoneNumberWhereInput!]
  OR: [PhoneNumberWhereInput!]
  NOT: [PhoneNumberWhereInput!]
  id: IDFilter
  user: UserWhereInput
  type: StringNullableFilter
  value: StringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input PhoneNumberOrderByInput {
  id: OrderDirection
  type: OrderDirection
  value: OrderDirection
}

input PhoneNumberUpdateInput {
  user: UserRelateToOneForUpdateInput
  type: String
  value: String
}

input PhoneNumberUpdateArgs {
  where: PhoneNumberWhereUniqueInput!
  data: PhoneNumberUpdateInput!
}

input PhoneNumberCreateInput {
  user: UserRelateToOneForCreateInput
  type: String
  value: String
}

type Post {
  id: ID!
  title: String
  status: String
  content: Post_content_Document
  publishDate: DateTime
  author: User
}

type Post_content_Document {
  document(hydrateRelationships: Boolean! = false): JSON!
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input PostWhereUniqueInput {
  id: ID
}

input PostWhereInput {
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
  id: IDFilter
  title: StringFilter
  status: StringFilter
  publishDate: DateTimeNullableFilter
  author: UserWhereInput
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input PostOrderByInput {
  id: OrderDirection
  title: OrderDirection
  status: OrderDirection
  publishDate: OrderDirection
}

input PostUpdateInput {
  title: String
  status: String
  content: JSON
  publishDate: DateTime
  author: UserRelateToOneForUpdateInput
}

input PostUpdateArgs {
  where: PostWhereUniqueInput!
  data: PostUpdateInput!
}

input PostCreateInput {
  title: String
  status: String
  content: JSON
  publishDate: DateTime
  author: UserRelateToOneForCreateInput
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createList1(data: List1CreateInput!): List1
  createList1s(data: [List1CreateInput!]!): [List1]
  updateList1(where: List1WhereUniqueInput!, data: List1UpdateInput!): List1
  updateList1s(data: [List1UpdateArgs!]!): [List1]
  deleteList1(where: List1WhereUniqueInput!): List1
  deleteList1s(where: [List1WhereUniqueInput!]!): [List1]
  createList2(data: List2CreateInput!): List2
  createList2s(data: [List2CreateInput!]!): [List2]
  updateList2(where: List2WhereUniqueInput!, data: List2UpdateInput!): List2
  updateList2s(data: [List2UpdateArgs!]!): [List2]
  deleteList2(where: List2WhereUniqueInput!): List2
  deleteList2s(where: [List2WhereUniqueInput!]!): [List2]
  createList3(data: List3CreateInput!): List3
  createList3s(data: [List3CreateInput!]!): [List3]
  updateList3(where: List3WhereUniqueInput!, data: List3UpdateInput!): List3
  updateList3s(data: [List3UpdateArgs!]!): [List3]
  deleteList3(where: List3WhereUniqueInput!): List3
  deleteList3s(where: [List3WhereUniqueInput!]!): [List3]
  createList4(data: List4CreateInput!): List4
  createList4s(data: [List4CreateInput!]!): [List4]
  updateList4(where: List4WhereUniqueInput!, data: List4UpdateInput!): List4
  updateList4s(data: [List4UpdateArgs!]!): [List4]
  deleteList4(where: List4WhereUniqueInput!): List4
  deleteList4s(where: [List4WhereUniqueInput!]!): [List4]
  createList5(data: List5CreateInput!): List5
  createList5s(data: [List5CreateInput!]!): [List5]
  updateList5(where: List5WhereUniqueInput!, data: List5UpdateInput!): List5
  updateList5s(data: [List5UpdateArgs!]!): [List5]
  deleteList5(where: List5WhereUniqueInput!): List5
  deleteList5s(where: [List5WhereUniqueInput!]!): [List5]
  createList6(data: List6CreateInput!): List6
  createList6s(data: [List6CreateInput!]!): [List6]
  updateList6(where: List6WhereUniqueInput!, data: List6UpdateInput!): List6
  updateList6s(data: [List6UpdateArgs!]!): [List6]
  deleteList6(where: List6WhereUniqueInput!): List6
  deleteList6s(where: [List6WhereUniqueInput!]!): [List6]
  createList7(data: List7CreateInput!): List7
  createList7s(data: [List7CreateInput!]!): [List7]
  updateList7(where: List7WhereUniqueInput!, data: List7UpdateInput!): List7
  updateList7s(data: [List7UpdateArgs!]!): [List7]
  deleteList7(where: List7WhereUniqueInput!): List7
  deleteList7s(where: [List7WhereUniqueInput!]!): [List7]
  createList8(data: List8CreateInput!): List8
  createList8s(data: [List8CreateInput!]!): [List8]
  updateList8(where: List8WhereUniqueInput!, data: List8UpdateInput!): List8
  updateList8s(data: [List8UpdateArgs!]!): [List8]
  deleteList8(where: List8WhereUniqueInput!): List8
  deleteList8s(where: [List8WhereUniqueInput!]!): [List8]
  createPhoneNumber(data: PhoneNumberCreateInput!): PhoneNumber
  createPhoneNumbers(data: [PhoneNumberCreateInput!]!): [PhoneNumber]
  updatePhoneNumber(where: PhoneNumberWhereUniqueInput!, data: PhoneNumberUpdateInput!): PhoneNumber
  updatePhoneNumbers(data: [PhoneNumberUpdateArgs!]!): [PhoneNumber]
  deletePhoneNumber(where: PhoneNumberWhereUniqueInput!): PhoneNumber
  deletePhoneNumbers(where: [PhoneNumberWhereUniqueInput!]!): [PhoneNumber]
  createPost(data: PostCreateInput!): Post
  createPosts(data: [PostCreateInput!]!): [Post]
  updatePost(where: PostWhereUniqueInput!, data: PostUpdateInput!): Post
  updatePosts(data: [PostUpdateArgs!]!): [Post]
  deletePost(where: PostWhereUniqueInput!): Post
  deletePosts(where: [PostWhereUniqueInput!]!): [Post]
  endSession: Boolean!
  authenticateUserWithPassword(email: String!, password: String!): UserAuthenticationWithPasswordResult
  createInitialUser(data: CreateInitialUserInput!): UserAuthenticationWithPasswordSuccess!
  createRandomPosts: [Post!]!
}

union UserAuthenticationWithPasswordResult = UserAuthenticationWithPasswordSuccess | UserAuthenticationWithPasswordFailure

type UserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: User!
}

type UserAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialUserInput {
  name: String
  email: String
  password: String
}

type Query {
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0): [User!]
  user(where: UserWhereUniqueInput!): User
  usersCount(where: UserWhereInput! = {}): Int
  list1s(where: List1WhereInput! = {}, orderBy: [List1OrderByInput!]! = [], take: Int, skip: Int! = 0): [List1!]
  list1(where: List1WhereUniqueInput!): List1
  list1sCount(where: List1WhereInput! = {}): Int
  list2s(where: List2WhereInput! = {}, orderBy: [List2OrderByInput!]! = [], take: Int, skip: Int! = 0): [List2!]
  list2(where: List2WhereUniqueInput!): List2
  list2sCount(where: List2WhereInput! = {}): Int
  list3s(where: List3WhereInput! = {}, orderBy: [List3OrderByInput!]! = [], take: Int, skip: Int! = 0): [List3!]
  list3(where: List3WhereUniqueInput!): List3
  list3sCount(where: List3WhereInput! = {}): Int
  list4s(where: List4WhereInput! = {}, orderBy: [List4OrderByInput!]! = [], take: Int, skip: Int! = 0): [List4!]
  list4(where: List4WhereUniqueInput!): List4
  list4sCount(where: List4WhereInput! = {}): Int
  list5s(where: List5WhereInput! = {}, orderBy: [List5OrderByInput!]! = [], take: Int, skip: Int! = 0): [List5!]
  list5(where: List5WhereUniqueInput!): List5
  list5sCount(where: List5WhereInput! = {}): Int
  list6s(where: List6WhereInput! = {}, orderBy: [List6OrderByInput!]! = [], take: Int, skip: Int! = 0): [List6!]
  list6(where: List6WhereUniqueInput!): List6
  list6sCount(where: List6WhereInput! = {}): Int
  list7s(where: List7WhereInput! = {}, orderBy: [List7OrderByInput!]! = [], take: Int, skip: Int! = 0): [List7!]
  list7(where: List7WhereUniqueInput!): List7
  list7sCount(where: List7WhereInput! = {}): Int
  list8s(where: List8WhereInput! = {}, orderBy: [List8OrderByInput!]! = [], take: Int, skip: Int! = 0): [List8!]
  list8(where: List8WhereUniqueInput!): List8
  list8sCount(where: List8WhereInput! = {}): Int
  phoneNumbers(where: PhoneNumberWhereInput! = {}, orderBy: [PhoneNumberOrderByInput!]! = [], take: Int, skip: Int! = 0): [PhoneNumber!]
  phoneNumber(where: PhoneNumberWhereUniqueInput!): PhoneNumber
  phoneNumbersCount(where: PhoneNumberWhereInput! = {}): Int
  posts(where: PostWhereInput! = {}, orderBy: [PostOrderByInput!]! = [], take: Int, skip: Int! = 0): [Post!]
  post(where: PostWhereUniqueInput!): Post
  postsCount(where: PostWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
  randomNumber: RandomNumber
  uuid: ID!
}

union AuthenticatedItem = User

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
  isSingleton: Boolean
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}

type RandomNumber {
  number: Int
  generatedAt: Int
}
