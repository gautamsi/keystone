// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                  BigInt        @id @default(autoincrement())
  name                String        @default("")
  email               String        @unique @default("")
  avatar_filesize     Int?
  avatar_extension    String?
  avatar_width        Int?
  avatar_height       Int?
  avatar_id           String?
  attachment_filesize Int?
  attachment_filename String?
  password            String?
  isAdmin             Boolean       @default(false)
  roles               String        @default("")
  phoneNumbers        PhoneNumber[] @relation("PhoneNumber_user")
  posts               Post[]        @relation("Post_author")
  list1               List1?        @relation("User_list1", fields: [list1Id], references: [id])
  list1Id             String?       @map("list1")
  list2s              List2[]       @relation("User_list2s")
  list3               List3?        @relation("List3_user")
  list4s              List4[]       @relation("List4_user")
  list5s              List5[]       @relation("List5_users")
  list6s              List6[]       @relation("User_list6s")
  list7               List7?        @relation("User_list7", fields: [list7Id], references: [id])
  list7Id             String?       @map("list7")
  list8               List8[]       @relation("User_list8")
  from_List6_users    List6[]       @relation("List6_users")
  from_List7_user     List7[]       @relation("List7_user")
  from_List8_user     List8[]       @relation("List8_user")

  @@index([list1Id])
  @@index([list7Id])
}

model List1 {
  id              String @id @default(cuid())
  name            String @default("")
  from_User_list1 User[] @relation("User_list1")
}

model List2 {
  id               String @id @default(cuid())
  name             String @default("")
  from_User_list2s User[] @relation("User_list2s")
}

model List3 {
  id     String  @id @default(cuid())
  name   String  @default("")
  user   User?   @relation("List3_user", fields: [userId], references: [id])
  userId BigInt? @unique @map("user")
}

model List4 {
  id     String  @id @default(cuid())
  name   String  @default("")
  user   User?   @relation("List4_user", fields: [userId], references: [id])
  userId BigInt? @map("user")

  @@index([userId])
}

model List5 {
  id    String @id @default(cuid())
  name  String @default("")
  users User[] @relation("List5_users")
}

model List6 {
  id               String @id @default(cuid())
  name             String @default("")
  users            User[] @relation("List6_users")
  from_User_list6s User[] @relation("User_list6s")
}

model List7 {
  id              String  @id @default(cuid())
  name            String  @default("")
  user            User?   @relation("List7_user", fields: [userId], references: [id])
  userId          BigInt? @map("user")
  from_User_list7 User[]  @relation("User_list7")

  @@index([userId])
}

model List8 {
  id              String  @id @default(cuid())
  name            String  @default("")
  user            User?   @relation("List8_user", fields: [userId], references: [id])
  userId          BigInt? @map("user")
  from_User_list8 User[]  @relation("User_list8")

  @@index([userId])
}

model PhoneNumber {
  id     BigInt               @id @default(autoincrement())
  user   User?                @relation("PhoneNumber_user", fields: [userId], references: [id])
  userId BigInt?              @map("user")
  type   PhoneNumberTypeType?
  value  String               @default("")

  @@index([userId])
}

model Post {
  id          BigInt    @id @default(autoincrement())
  title       String    @default("")
  status      String    @default("draft")
  content     Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  publishDate DateTime?
  author      User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId    BigInt?   @map("author")

  @@index([authorId])
}

enum PhoneNumberTypeType {
  home
  work
  mobile
}
